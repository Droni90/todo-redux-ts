{"version":3,"sources":["redux/types/todo.ts","hooks/useTypeSelector.ts","redux/actions/group.ts","components/GroupsList.tsx","components/Main.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/TodoPage.tsx","components/App.tsx","redux/reducers/groupsList/index.ts","redux/reducers/index.ts","utils/Api.ts","redux/sagas/loadGroupsSaga.ts","redux/sagas/addGroupSaga.ts","redux/sagas/removeGroupSaga.ts","redux/sagas/addTodoSaga.ts","redux/sagas/removeTodoSaga.ts","redux/sagas/index.ts","redux/store/store.ts","index.tsx"],"names":["ActionGroupTypes","useTypeSelector","useSelector","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","listItem","display","justifyContent","link","textDecoration","color","text","fontSize","GroupsList","handleGroupClick","classes","groups","state","groupsList","dispatch","useDispatch","handleRemove","evt","id","preventDefault","type","REMOVE_GROUP","payload","removeGroup","countTodos","count","forEach","group","todos","length","countCompletedTodos","todo","completed","List","className","map","groupName","to","ListItem","role","undefined","onClick","dense","button","ListItemText","primary","ListItemSecondaryAction","IconButton","roof","flexDirection","alignItems","height","form","input","marginBottom","box","textAlign","subtitle","marginTop","Main","useState","inputValue","setInputValue","Container","Box","onSubmit","newGroup","Date","now","ADD_GROUP","OutlinedInput","value","onChange","target","required","Button","variant","size","TodoItem","todoName","groupId","handleRemoveButton","todoId","REMOVE_TODO","removeTodo","handleCompleteButton","CHECK_TODO","checkTodo","TodoList","inputSearch","radioValue","useMemo","find","item","startsWith","paddingBottom","TodoPage","useRouteMatch","params","setInputSearch","inputTodo","setInputTodo","React","setRadioValue","placeholder","FormControl","component","RadioGroup","aria-label","name","FormControlLabel","control","Radio","label","onKeyDown","key","ADD_TODO","addTodo","padding","App","useEffect","LOAD_GROUPS","exact","path","initialState","rootReducer","combineReducers","action","SET_GROUPS","filter","push","getGroups","axios","get","postGroups","post","delete","postTodo","loadGroupsSaga","loadGroupsWorker","takeLatest","call","api","data","console","log","put","addGroupSaga","addGroupWorker","removeGroupSaga","removeGroupWorker","addTodoSaga","addTodoWorker","removeTodoSaga","removeTodoWorker","rootSaga","all","sagaMiddleWare","createSagaMiddleware","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","run","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.149f5dda.chunk.js","sourcesContent":["export interface GroupsState {\r\n  groups: any[];\r\n}\r\n\r\nexport enum ActionGroupTypes {\r\n  SET_GROUPS = \"SET_GROUPS\",\r\n  REMOVE_GROUP = \"REMOVE_GROUP\",\r\n  ADD_GROUP = \"ADD_GROUP\",\r\n  ADD_TODO = \"ADD_TODO\",\r\n  REMOVE_TODO = \"REMOVE_TODO\",\r\n  CHECK_TODO = \"CHECK_TODO\",\r\n  LOAD_GROUPS = \"LOAD_GROUPS\",\r\n}\r\ninterface SetGroupsAction {\r\n  type: ActionGroupTypes.SET_GROUPS;\r\n  payload: [];\r\n}\r\ninterface AddGroupAction {\r\n  type: ActionGroupTypes.ADD_GROUP;\r\n  payload: any;\r\n}\r\ninterface RemoveGroupAction {\r\n  type: ActionGroupTypes.REMOVE_GROUP;\r\n  payload: number;\r\n}\r\n\r\ninterface AddTodoAction {\r\n  type: ActionGroupTypes.ADD_TODO;\r\n  payload: [];\r\n  id: number;\r\n}\r\ninterface RemoveTodoAction {\r\n  type: ActionGroupTypes.REMOVE_TODO;\r\n  groupId: number;\r\n  todoId: number;\r\n}\r\ninterface CheckTodo {\r\n  type: ActionGroupTypes.CHECK_TODO;\r\n  groupId: number;\r\n  todoId: number;\r\n}\r\ninterface LoadGroups {\r\n  type: ActionGroupTypes.LOAD_GROUPS;\r\n}\r\n\r\nexport type GroupAction =\r\n  | SetGroupsAction\r\n  | AddGroupAction\r\n  | RemoveGroupAction\r\n  | AddTodoAction\r\n  | RemoveTodoAction\r\n  | CheckTodo\r\n  | LoadGroups;\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/reducers\";\r\n\r\nexport const useTypeSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { ActionGroupTypes } from \"../types/todo\";\r\nimport { IGroupList, ITodoList } from \"../../interfaces\";\r\n\r\nexport const loadGroups = () => {\r\n  return {\r\n    type: ActionGroupTypes.LOAD_GROUPS,\r\n  };\r\n};\r\nexport const setGroups = (groups: any) => {\r\n  return { type: ActionGroupTypes.SET_GROUPS, payload: groups };\r\n};\r\n\r\nexport const addGroup = (group: IGroupList) => {\r\n  return { type: ActionGroupTypes.ADD_GROUP, payload: group };\r\n};\r\n\r\nexport const removeGroup = (id: number) => {\r\n  return { type: ActionGroupTypes.REMOVE_GROUP, payload: id };\r\n};\r\n\r\nexport const addTodo = (todo: ITodoList, id: number) => {\r\n  return { type: ActionGroupTypes.ADD_TODO, payload: todo, id };\r\n};\r\n\r\nexport const removeTodo = (todoId: number, groupId: number) => {\r\n  return {\r\n    type: ActionGroupTypes.REMOVE_TODO,\r\n    groupId: groupId,\r\n    todoId: todoId,\r\n  };\r\n};\r\n\r\nexport const checkTodo = (todoId: number, groupId: number) => {\r\n  return {\r\n    type: ActionGroupTypes.CHECK_TODO,\r\n    groupId: groupId,\r\n    todoId: todoId,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useTypeSelector } from \"../hooks/useTypeSelector\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { removeGroup } from \"../redux/actions/group\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ITodoList } from \"../interfaces\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: \"760px\",\r\n    backgroundColor: \"inherit\",\r\n  },\r\n  listItem: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"#000\",\r\n  },\r\n  text: {\r\n    fontSize: \"45px\",\r\n  },\r\n}));\r\ninterface IGroupsList {\r\n  handleGroupClick: (id: number) => void;\r\n}\r\nconst GroupsList: React.FC<IGroupsList> = ({ handleGroupClick }) => {\r\n  const classes = useStyles();\r\n  const groups = useTypeSelector((state) => state.groupsList.groups);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRemove = (evt: React.SyntheticEvent, id: number) => {\r\n    evt.preventDefault();\r\n    dispatch(removeGroup(id));\r\n  };\r\n\r\n  const countTodos = (id: number) => {\r\n    let count;\r\n    groups.forEach((group) => {\r\n      if (group.id === id) {\r\n        count = group.todos.length;\r\n      }\r\n    });\r\n    return count;\r\n  };\r\n\r\n  const countCompletedTodos = (id: number) => {\r\n    let count = 0;\r\n    groups.forEach((group) => {\r\n      if (group.id === id) {\r\n        group.todos.forEach((todo: ITodoList) => {\r\n          if (todo.completed) {\r\n            count++;\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {groups.map(({ groupName, id }) => {\r\n        return (\r\n          <Link className={classes.link} to={`/group/${id}`}>\r\n            <ListItem\r\n              key={id}\r\n              role={undefined}\r\n              className={classes.listItem}\r\n              onClick={() => handleGroupClick(id)}\r\n              dense\r\n              button\r\n            >\r\n              <ListItemText\r\n                className={classes.text}\r\n                primary={`${groupName} (${countCompletedTodos(\r\n                  id\r\n                )} / ${countTodos(id)})`}\r\n              />\r\n\r\n              <ListItemSecondaryAction>\r\n                <IconButton onClick={(evt) => handleRemove(evt, id)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          </Link>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default GroupsList;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  makeStyles,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport { IGroupList } from \"../interfaces\";\r\nimport GroupsList from \"./GroupsList\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTypeSelector } from \"../hooks/useTypeSelector\";\r\nimport { addGroup } from \"../redux/actions/group\";\r\n\r\nconst useStyles = makeStyles({\r\n  roof: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#96e395\",\r\n    height: \"40px\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"200px\",\r\n  },\r\n  input: {\r\n    marginBottom: \"15px\",\r\n    backgroundColor: \"#fff\",\r\n    height: \"40px\",\r\n    width: \"100%\",\r\n  },\r\n  box: {\r\n    maxWidth: \"360px\",\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n  subtitle: {\r\n    marginTop: \"50%\",\r\n  },\r\n});\r\n\r\ninterface IMain {\r\n  handleGroupClick: (id: number) => void;\r\n}\r\n\r\nconst Main: React.FC<IMain> = ({ handleGroupClick }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [inputValue, setInputValue] = useState<string>(\"\");\r\n  const groups = useTypeSelector((state) => state.groupsList.groups);\r\n\r\n  const handleValue = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputValue(evt.target.value);\r\n  };\r\n\r\n  const handleAddGroupSubmit = (evt: React.FormEvent) => {\r\n    evt.preventDefault();\r\n    const arr: any[] = [];\r\n    const newGroup: IGroupList = {\r\n      groupName: inputValue,\r\n      id: Date.now(),\r\n      todos: arr,\r\n    };\r\n    dispatch(addGroup(newGroup));\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.roof}>\r\n      <Box className={classes.box}>\r\n        <h1>ToDo groups</h1>\r\n        {groups.length ? (\r\n          <GroupsList handleGroupClick={handleGroupClick} />\r\n        ) : (\r\n          <h2 className={classes.subtitle}>У вас нет дел</h2>\r\n        )}\r\n      </Box>\r\n      <form className={classes.form} onSubmit={handleAddGroupSubmit}>\r\n        <OutlinedInput\r\n          id=\"component-outlined\"\r\n          value={inputValue}\r\n          onChange={handleValue}\r\n          className={classes.input}\r\n          required={true}\r\n        />\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          type=\"submit\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { checkTodo, removeTodo } from \"../redux/actions/group\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  completed: {\r\n    textDecoration: \"line-through\",\r\n  },\r\n});\r\ninterface ITodo {\r\n  todoName: string;\r\n  id: number;\r\n  completed: boolean | undefined;\r\n  groupId: number;\r\n}\r\nconst TodoItem: React.FC<ITodo> = ({ todoName, id, completed, groupId }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleRemoveButton = (todoId: number) => {\r\n    dispatch(removeTodo(todoId, groupId));\r\n  };\r\n\r\n  const handleCompleteButton = (todoId: number) => {\r\n    dispatch(checkTodo(todoId, groupId));\r\n  };\r\n  return (\r\n    <ListItem key={id} role={undefined} dense button>\r\n      <ListItemText\r\n        primary={todoName}\r\n        className={completed ? classes.completed : \"\"}\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <IconButton onClick={() => handleCompleteButton(id)}>\r\n          <CheckIcon />\r\n        </IconButton>\r\n        <IconButton onClick={() => handleRemoveButton(id)}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useMemo } from \"react\";\r\nimport { List } from \"@material-ui/core\";\r\nimport { useTypeSelector } from \"../hooks/useTypeSelector\";\r\nimport { ITodoList } from \"../interfaces\";\r\n\r\nimport TodoItem from \"./TodoItem\";\r\n\r\ninterface ITodo {\r\n  id: string;\r\n  inputSearch: string;\r\n  radioValue: string;\r\n}\r\n\r\nconst TodoList: React.FC<ITodo> = ({ id, inputSearch, radioValue }) => {\r\n  const { groups } = useTypeSelector((state) => state.groupsList);\r\n  const groupId = +id;\r\n\r\n  const todos = useMemo(() => {\r\n    return groups.find((item) => item.id === groupId).todos;\r\n  }, [groups]);\r\n\r\n  return (\r\n    <List>\r\n      {todos.length ? (\r\n        todos.map(({ todoName, id, completed }: ITodoList) => {\r\n          if (!inputSearch && radioValue === \"All\") {\r\n            return (\r\n              <TodoItem\r\n                todoName={todoName}\r\n                id={id}\r\n                groupId={groupId}\r\n                completed={completed}\r\n                key={id}\r\n              />\r\n            );\r\n          }\r\n          if (inputSearch && todoName.startsWith(inputSearch)) {\r\n            return (\r\n              <TodoItem\r\n                todoName={todoName}\r\n                id={id}\r\n                completed={completed}\r\n                groupId={groupId}\r\n                key={id}\r\n              />\r\n            );\r\n          }\r\n          if (radioValue === \"Undone\" && !completed) {\r\n            return (\r\n              <TodoItem\r\n                todoName={todoName}\r\n                id={id}\r\n                completed={completed}\r\n                groupId={groupId}\r\n                key={id}\r\n              />\r\n            );\r\n          }\r\n        })\r\n      ) : (\r\n        <h2>Дел пока нет</h2>\r\n      )}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  FormControlLabel,\r\n  makeStyles,\r\n  OutlinedInput,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { addTodo } from \"../redux/actions/group\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TodoList from \"./TodoList\";\r\nimport { ITodoList } from \"../interfaces\";\r\n\r\nconst useStyles = makeStyles({\r\n  roof: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"70%\",\r\n  },\r\n  input: {\r\n    marginBottom: \"15px\",\r\n    backgroundColor: \"#fff\",\r\n    height: \"40px\",\r\n    width: \"80%\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"#000\",\r\n    fontSize: \"24px\",\r\n    paddingBottom: \"40px\",\r\n  },\r\n});\r\n\r\nconst TodoPage: React.FC = () => {\r\n  const classes = useStyles();\r\n  const match = useRouteMatch(\"/group/:id\");\r\n  const { id }: any = match!.params;\r\n\r\n  const [inputSearch, setInputSearch] = useState<string>(\"\");\r\n  const [inputTodo, setInputTodo] = useState<string>(\"\");\r\n  const [radioValue, setRadioValue] = React.useState(\"All\");\r\n\r\n  const dispatch = useDispatch();\r\n  const handleSearchInput = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputSearch(evt.target.value);\r\n  };\r\n\r\n  const handleTodoInput = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputTodo(evt.target.value);\r\n  };\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRadioValue(evt.target.value);\r\n  };\r\n\r\n  const onEnter = (evt: React.KeyboardEvent) => {\r\n    if (evt.key === \"Enter\" && inputTodo) {\r\n      const newGroup: ITodoList = { todoName: inputTodo, id: Date.now() };\r\n      dispatch(addTodo(newGroup, id));\r\n      setInputTodo(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.roof}>\r\n      <Link className={classes.link} to=\"/\">\r\n        На главную\r\n      </Link>\r\n      <OutlinedInput\r\n        value={inputSearch}\r\n        onChange={handleSearchInput}\r\n        className={classes.input}\r\n        placeholder=\"Search...\"\r\n      />\r\n      <FormControl component=\"fieldset\">\r\n        <RadioGroup\r\n          aria-label=\"filter\"\r\n          name=\"filter\"\r\n          value={radioValue}\r\n          onChange={handleChange}\r\n        >\r\n          <FormControlLabel value=\"All\" control={<Radio />} label=\"All\" />\r\n          <FormControlLabel value=\"Undone\" control={<Radio />} label=\"Undone\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <TodoList id={id} inputSearch={inputSearch} radioValue={radioValue} />\r\n      <OutlinedInput\r\n        value={inputTodo}\r\n        onChange={handleTodoInput}\r\n        className={classes.input}\r\n        placeholder=\"Добавить\"\r\n        onKeyDown={onEnter}\r\n        required={true}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TodoPage;\r\n","import React, { useEffect } from \"react\";\r\nimport Main from \"./Main\";\r\nimport \"fontsource-roboto\";\r\nimport { Container, makeStyles } from \"@material-ui/core\";\r\nimport TodoPage from \"./TodoPage\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loadGroups } from \"../redux/actions/group\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#cfe8fc\",\r\n    height: \"100vh\",\r\n    padding: \"50px 0\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const handleGroupClick = () => {};\r\n\r\n  useEffect(() => {\r\n    dispatch(loadGroups());\r\n  }, []);\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Main handleGroupClick={handleGroupClick} />\r\n        </Route>\r\n        <Route path=\"/group/:id\">\r\n          <TodoPage />\r\n        </Route>\r\n      </Switch>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ActionGroupTypes, GroupAction, GroupsState } from \"../../types/todo\";\r\nimport { ITodoList } from \"../../../interfaces\";\r\n\r\nconst initialState: GroupsState = {\r\n  groups: [],\r\n};\r\n\r\nexport const groupsList = (\r\n  state: GroupsState = initialState,\r\n  action: GroupAction\r\n): GroupsState => {\r\n  let newGroups;\r\n  switch (action.type) {\r\n    case ActionGroupTypes.SET_GROUPS:\r\n      return { ...state, groups: action.payload };\r\n\r\n    case ActionGroupTypes.ADD_GROUP:\r\n      return { ...state, groups: [...state.groups, action.payload] };\r\n\r\n    case ActionGroupTypes.REMOVE_GROUP:\r\n      newGroups = state.groups.filter((group) => group.id !== action.payload);\r\n      return { groups: newGroups };\r\n\r\n    case ActionGroupTypes.ADD_TODO:\r\n      newGroups = [...state.groups].map((item) => {\r\n        if (item.id === +action.id) {\r\n          item.todos.push(action.payload);\r\n        }\r\n        return item;\r\n      });\r\n      return { groups: newGroups };\r\n\r\n    case ActionGroupTypes.REMOVE_TODO:\r\n      newGroups = [...state.groups].map((item) => {\r\n        if (item.id === action.groupId) {\r\n          item.todos = item.todos.filter(\r\n            (todo: ITodoList) => todo.id !== action.todoId\r\n          );\r\n        }\r\n        return item;\r\n      });\r\n      return { groups: newGroups };\r\n\r\n    case ActionGroupTypes.CHECK_TODO:\r\n      newGroups = [...state.groups].map((item) => {\r\n        if (item.id === action.groupId) {\r\n          item.todos.forEach((todo: ITodoList) => {\r\n            if (todo.id === action.todoId) {\r\n              todo.completed = !todo.completed;\r\n            }\r\n          });\r\n        }\r\n        return item;\r\n      });\r\n      return { groups: newGroups };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { groupsList } from \"./groupsList\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  groupsList,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import axios from \"axios\";\r\nimport { IGroupList, ITodoList } from \"../interfaces\";\r\n\r\nexport const getGroups = () => {\r\n  return axios.get(\"http://localhost:3000/groups\");\r\n};\r\nexport const postGroups = (group: IGroupList) => {\r\n  return axios.post(\"http://localhost:3000/groups/\", group);\r\n};\r\n\r\nexport const removeGroup = (id: any) => {\r\n  return axios.delete(`http://localhost:3000/groups/${id.id}`, id);\r\n};\r\n\r\nexport const postTodo = (todos: ITodoList, id: number) => {\r\n  return axios.post(`http://localhost:3000/groups/${id}/todos`, todos);\r\n};\r\n\r\nexport const removeTodo = (todoId: any, groupId: any) => {\r\n  return axios.delete(\r\n    `http://localhost:3000/groups/${groupId.id}/todos/${todoId.id}`,\r\n    todoId\r\n  );\r\n};\r\n","import { takeLatest, put, call, StrictEffect } from \"redux-saga/effects\";\r\nimport { ActionGroupTypes } from \"../types/todo\";\r\nimport * as api from \"../../utils/Api\";\r\nimport { setGroups } from \"../actions/group\";\r\n\r\nexport function* loadGroupsSaga(): Generator<StrictEffect> {\r\n  yield takeLatest(ActionGroupTypes.LOAD_GROUPS, loadGroupsWorker);\r\n}\r\n\r\nfunction* loadGroupsWorker() {\r\n  try {\r\n    const { data } = yield call(api.getGroups);\r\n    console.log(data);\r\n    yield put(setGroups(data));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport default loadGroupsSaga;\r\n","import { takeLatest, call, StrictEffect } from \"redux-saga/effects\";\r\nimport { ActionGroupTypes } from \"../types/todo\";\r\nimport * as api from \"../../utils/Api\";\r\n\r\nfunction* addGroupSaga(): Generator<StrictEffect> {\r\n  yield takeLatest(ActionGroupTypes.ADD_GROUP, addGroupWorker);\r\n}\r\nfunction* addGroupWorker(action: any) {\r\n  try {\r\n    yield call(api.postGroups, action.payload);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nexport default addGroupSaga;\r\n","import { takeLatest, call, StrictEffect } from \"redux-saga/effects\";\r\nimport { ActionGroupTypes } from \"../types/todo\";\r\nimport * as api from \"../../utils/Api\";\r\n\r\nfunction* removeGroupSaga(): Generator<StrictEffect> {\r\n  yield takeLatest(ActionGroupTypes.REMOVE_GROUP, removeGroupWorker);\r\n}\r\nfunction* removeGroupWorker(action: any) {\r\n  try {\r\n    yield call(api.removeGroup, { id: action.payload });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nexport default removeGroupSaga;\r\n","import { takeLatest, call, StrictEffect } from \"redux-saga/effects\";\r\nimport { ActionGroupTypes } from \"../types/todo\";\r\nimport * as api from \"../../utils/Api\";\r\n\r\nfunction* addTodoSaga(): Generator<StrictEffect> {\r\n  yield takeLatest(ActionGroupTypes.ADD_TODO, addTodoWorker);\r\n}\r\n\r\nfunction* addTodoWorker(action: any) {\r\n  console.log(action.payload);\r\n  try {\r\n    yield call(api.postTodo, action.payload, action.id);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nexport default addTodoSaga;\r\n","import { takeLatest, call, StrictEffect } from \"redux-saga/effects\";\r\nimport { ActionGroupTypes } from \"../types/todo\";\r\nimport * as api from \"../../utils/Api\";\r\n\r\nfunction* removeTodoSaga(): Generator<StrictEffect> {\r\n  yield takeLatest(ActionGroupTypes.REMOVE_TODO, removeTodoWorker);\r\n}\r\nfunction* removeTodoWorker(action: any) {\r\n  try {\r\n    yield call(api.removeGroup, {\r\n      todoId: action.todoId,\r\n      groupId: action.groupId,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nexport default removeTodoSaga;\r\n","import { all } from \"redux-saga/effects\";\r\nimport loadGroupsSaga from \"./loadGroupsSaga\";\r\nimport addGroupSaga from \"./addGroupSaga\";\r\nimport removeGroupSaga from \"./removeGroupSaga\";\r\nimport addTodoSaga from \"./addTodoSaga\";\r\nimport removeTodoSaga from \"./removeTodoSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    loadGroupsSaga(),\r\n    addGroupSaga(),\r\n    removeGroupSaga(),\r\n    addTodoSaga(),\r\n    removeTodoSaga(),\r\n  ]);\r\n}\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas\";\r\n\r\nconst sagaMiddleWare = createSagaMiddleware();\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(sagaMiddleWare),\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nsagaMiddleWare.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/todo-redux-ts\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}